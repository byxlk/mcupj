C51 COMPILER V9.52.0.0   TIMER                                                             02/18/2021 00:01:39 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE code\stclib\timer.c LARGE BROWSE INCDIR(.\code;.\code\stclib) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listing\timer.lst) OBJECT(.\Objects\timer.obj)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          本文件为STC15xxx系列的定时器初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
   5          
   6          
   7          ******************************************/
   8          
   9          
  10          
  11          #include        "timer.h"
  12          
  13          /********************* Timer0中断函数************************/
  14          //void timer0_int (void) interrupt TIMER0_VECTOR
  15          //{
  16          //}
  17          
  18          /********************* Timer1中断函数************************/
  19          //void timer1_int (void) interrupt TIMER1_VECTOR
  20          //{
  21          //}
  22          
  23          /********************* Timer2中断函数************************/
  24          //void timer2_int (void) interrupt TIMER2_VECTOR
  25          //{
  26          //      P10 = ~P10;
  27          //}
  28          
  29          
  30          //========================================================================
  31          // 函数: u8     Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  32          // 描述: 定时器初始化程序.
  33          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  34          // 返回: 成功返回0, 空操作返回1,错误返回2.
  35          // 版本: V1.0, 2012-10-22
  36          //========================================================================
  37          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  38          {
  39   1              if(TIM > Timer2)        return 1;       //空操作
  40   1      
  41   1              if(TIM == Timer0)
  42   1              {
  43   2                      TR0 = 0;                //停止计数
  44   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //允许中断
  45   2                      else                                                                    ET0 = 0;        //禁止中断
  46   2                      if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //高优先级中断
  47   2                      else                                                                    PT0 = 0;        //低优先级中断
  48   2                      if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //错误
  49   2                      TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3:
             - 16位自动重装, 不可屏蔽中断
  50   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x80;  //12T
  51   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
  52   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //对外计数或分频
  53   2                      else                                                                            TMOD &= ~0x04;  //定时
C51 COMPILER V9.52.0.0   TIMER                                                             02/18/2021 00:01:39 PAGE 2   

  54   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //输出时钟
  55   2                      else                                                    INT_CLKO &= ~0x01;      //不输出时钟
  56   2                      
  57   2                      TH0 = (u8)(TIMx->TIM_Value >> 8);
  58   2                      TL0 = (u8)TIMx->TIM_Value;
  59   2                      if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //开始运行
  60   2                      return  0;              //成功
  61   2              }
  62   1      
  63   1              if(TIM == Timer1)
  64   1              {
  65   2                      TR1 = 0;                //停止计数
  66   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //允许中断
  67   2                      else                                                                    ET1 = 0;        //禁止中断
  68   2                      if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //高优先级中断
  69   2                      else                                                                    PT1 = 0;        //低优先级中断
  70   2                      if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //错误
  71   2                      TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  72   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x40;  //12T
  73   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
  74   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //对外计数或分频
  75   2                      else                                                                            TMOD &= ~0x40;  //定时
  76   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //输出时钟
  77   2                      else                                                    INT_CLKO &= ~0x02;      //不输出时钟
  78   2                      
  79   2                      TH1 = (u8)(TIMx->TIM_Value >> 8);
  80   2                      TL1 = (u8)TIMx->TIM_Value;
  81   2                      if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //开始运行
  82   2                      return  0;              //成功
  83   2              }
  84   1      
  85   1              if(TIM == Timer2)               //Timer2,固定为16位自动重装, 中断无优先级
  86   1              {
  87   2                      AUXR &= ~(1<<4);        //停止计数
  88   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //允许中断
  89   2                      else                                                                            IE2  &= ~(1<<2);        //禁止中断
  90   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
  91   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~(1<<2);        //12T
  92   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
  93   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //对外计数或分频
  94   2                      else                                                                            AUXR &= ~(1<<3);        //定时
  95   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //输出时钟
  96   2                      else                                                    INT_CLKO &= ~0x04;      //不输出时钟
  97   2      
  98   2                      TH2 = (u8)(TIMx->TIM_Value >> 8);
  99   2                      TL2 = (u8)TIMx->TIM_Value;
 100   2                      if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //开始运行
 101   2                      return  0;              //成功
 102   2              }
 103   1              return 2;       //错误
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    411    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.52.0.0   TIMER                                                             02/18/2021 00:01:39 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
